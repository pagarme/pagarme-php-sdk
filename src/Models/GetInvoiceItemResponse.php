<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

/**
 * Response object for getting an invoice item
 */
class GetInvoiceItemResponse implements \JsonSerializable
{
    /**
     * @var array
     */
    private $amount = [];

    /**
     * @var array
     */
    private $description = [];

    /**
     * @var array
     */
    private $pricingScheme = [];

    /**
     * @var array
     */
    private $priceBracket = [];

    /**
     * @var array
     */
    private $quantity = [];

    /**
     * @var array
     */
    private $name = [];

    /**
     * @var array
     */
    private $subscriptionItemId = [];

    /**
     * Returns Amount.
     */
    public function getAmount(): ?int
    {
        if (count($this->amount) == 0) {
            return null;
        }
        return $this->amount['value'];
    }

    /**
     * Sets Amount.
     *
     * @maps amount
     */
    public function setAmount(?int $amount): void
    {
        $this->amount['value'] = $amount;
    }

    /**
     * Unsets Amount.
     */
    public function unsetAmount(): void
    {
        $this->amount = [];
    }

    /**
     * Returns Description.
     */
    public function getDescription(): ?string
    {
        if (count($this->description) == 0) {
            return null;
        }
        return $this->description['value'];
    }

    /**
     * Sets Description.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description['value'] = $description;
    }

    /**
     * Unsets Description.
     */
    public function unsetDescription(): void
    {
        $this->description = [];
    }

    /**
     * Returns Pricing Scheme.
     */
    public function getPricingScheme(): ?GetPricingSchemeResponse
    {
        if (count($this->pricingScheme) == 0) {
            return null;
        }
        return $this->pricingScheme['value'];
    }

    /**
     * Sets Pricing Scheme.
     *
     * @maps pricing_scheme
     */
    public function setPricingScheme(?GetPricingSchemeResponse $pricingScheme): void
    {
        $this->pricingScheme['value'] = $pricingScheme;
    }

    /**
     * Unsets Pricing Scheme.
     */
    public function unsetPricingScheme(): void
    {
        $this->pricingScheme = [];
    }

    /**
     * Returns Price Bracket.
     */
    public function getPriceBracket(): ?GetPriceBracketResponse
    {
        if (count($this->priceBracket) == 0) {
            return null;
        }
        return $this->priceBracket['value'];
    }

    /**
     * Sets Price Bracket.
     *
     * @maps price_bracket
     */
    public function setPriceBracket(?GetPriceBracketResponse $priceBracket): void
    {
        $this->priceBracket['value'] = $priceBracket;
    }

    /**
     * Unsets Price Bracket.
     */
    public function unsetPriceBracket(): void
    {
        $this->priceBracket = [];
    }

    /**
     * Returns Quantity.
     */
    public function getQuantity(): ?int
    {
        if (count($this->quantity) == 0) {
            return null;
        }
        return $this->quantity['value'];
    }

    /**
     * Sets Quantity.
     *
     * @maps quantity
     */
    public function setQuantity(?int $quantity): void
    {
        $this->quantity['value'] = $quantity;
    }

    /**
     * Unsets Quantity.
     */
    public function unsetQuantity(): void
    {
        $this->quantity = [];
    }

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        if (count($this->name) == 0) {
            return null;
        }
        return $this->name['value'];
    }

    /**
     * Sets Name.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name['value'] = $name;
    }

    /**
     * Unsets Name.
     */
    public function unsetName(): void
    {
        $this->name = [];
    }

    /**
     * Returns Subscription Item Id.
     * Subscription Item Id
     */
    public function getSubscriptionItemId(): ?string
    {
        if (count($this->subscriptionItemId) == 0) {
            return null;
        }
        return $this->subscriptionItemId['value'];
    }

    /**
     * Sets Subscription Item Id.
     * Subscription Item Id
     *
     * @maps subscription_item_id
     */
    public function setSubscriptionItemId(?string $subscriptionItemId): void
    {
        $this->subscriptionItemId['value'] = $subscriptionItemId;
    }

    /**
     * Unsets Subscription Item Id.
     * Subscription Item Id
     */
    public function unsetSubscriptionItemId(): void
    {
        $this->subscriptionItemId = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->amount)) {
            $json['amount']               = $this->amount['value'];
        }
        if (!empty($this->description)) {
            $json['description']          = $this->description['value'];
        }
        if (!empty($this->pricingScheme)) {
            $json['pricing_scheme']       = $this->pricingScheme['value'];
        }
        if (!empty($this->priceBracket)) {
            $json['price_bracket']        = $this->priceBracket['value'];
        }
        if (!empty($this->quantity)) {
            $json['quantity']             = $this->quantity['value'];
        }
        if (!empty($this->name)) {
            $json['name']                 = $this->name['value'];
        }
        if (!empty($this->subscriptionItemId)) {
            $json['subscription_item_id'] = $this->subscriptionItemId['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
