<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models\Builders;

use Core\Utils\CoreHelper;
use PagarmeApiSDKLib\Models\GetPlanResponse;

/**
 * Builder for model GetPlanResponse
 *
 * @see GetPlanResponse
 */
class GetPlanResponseBuilder
{
    /**
     * @var GetPlanResponse
     */
    private $instance;

    private function __construct(GetPlanResponse $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new get plan response Builder object.
     */
    public static function init(): self
    {
        return new self(new GetPlanResponse());
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Unsets id field.
     */
    public function unsetId(): self
    {
        $this->instance->unsetId();
        return $this;
    }

    /**
     * Sets name field.
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Unsets name field.
     */
    public function unsetName(): self
    {
        $this->instance->unsetName();
        return $this;
    }

    /**
     * Sets description field.
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Unsets description field.
     */
    public function unsetDescription(): self
    {
        $this->instance->unsetDescription();
        return $this;
    }

    /**
     * Sets url field.
     */
    public function url(?string $value): self
    {
        $this->instance->setUrl($value);
        return $this;
    }

    /**
     * Unsets url field.
     */
    public function unsetUrl(): self
    {
        $this->instance->unsetUrl();
        return $this;
    }

    /**
     * Sets statement descriptor field.
     */
    public function statementDescriptor(?string $value): self
    {
        $this->instance->setStatementDescriptor($value);
        return $this;
    }

    /**
     * Unsets statement descriptor field.
     */
    public function unsetStatementDescriptor(): self
    {
        $this->instance->unsetStatementDescriptor();
        return $this;
    }

    /**
     * Sets interval field.
     */
    public function interval(?string $value): self
    {
        $this->instance->setInterval($value);
        return $this;
    }

    /**
     * Unsets interval field.
     */
    public function unsetInterval(): self
    {
        $this->instance->unsetInterval();
        return $this;
    }

    /**
     * Sets interval count field.
     */
    public function intervalCount(?int $value): self
    {
        $this->instance->setIntervalCount($value);
        return $this;
    }

    /**
     * Unsets interval count field.
     */
    public function unsetIntervalCount(): self
    {
        $this->instance->unsetIntervalCount();
        return $this;
    }

    /**
     * Sets billing type field.
     */
    public function billingType(?string $value): self
    {
        $this->instance->setBillingType($value);
        return $this;
    }

    /**
     * Unsets billing type field.
     */
    public function unsetBillingType(): self
    {
        $this->instance->unsetBillingType();
        return $this;
    }

    /**
     * Sets payment methods field.
     */
    public function paymentMethods(?array $value): self
    {
        $this->instance->setPaymentMethods($value);
        return $this;
    }

    /**
     * Unsets payment methods field.
     */
    public function unsetPaymentMethods(): self
    {
        $this->instance->unsetPaymentMethods();
        return $this;
    }

    /**
     * Sets installments field.
     */
    public function installments(?array $value): self
    {
        $this->instance->setInstallments($value);
        return $this;
    }

    /**
     * Unsets installments field.
     */
    public function unsetInstallments(): self
    {
        $this->instance->unsetInstallments();
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Unsets status field.
     */
    public function unsetStatus(): self
    {
        $this->instance->unsetStatus();
        return $this;
    }

    /**
     * Sets currency field.
     */
    public function currency(?string $value): self
    {
        $this->instance->setCurrency($value);
        return $this;
    }

    /**
     * Unsets currency field.
     */
    public function unsetCurrency(): self
    {
        $this->instance->unsetCurrency();
        return $this;
    }

    /**
     * Sets created at field.
     */
    public function createdAt(?\DateTime $value): self
    {
        $this->instance->setCreatedAt($value);
        return $this;
    }

    /**
     * Unsets created at field.
     */
    public function unsetCreatedAt(): self
    {
        $this->instance->unsetCreatedAt();
        return $this;
    }

    /**
     * Sets updated at field.
     */
    public function updatedAt(?\DateTime $value): self
    {
        $this->instance->setUpdatedAt($value);
        return $this;
    }

    /**
     * Unsets updated at field.
     */
    public function unsetUpdatedAt(): self
    {
        $this->instance->unsetUpdatedAt();
        return $this;
    }

    /**
     * Sets items field.
     */
    public function items(?array $value): self
    {
        $this->instance->setItems($value);
        return $this;
    }

    /**
     * Unsets items field.
     */
    public function unsetItems(): self
    {
        $this->instance->unsetItems();
        return $this;
    }

    /**
     * Sets billing days field.
     */
    public function billingDays(?array $value): self
    {
        $this->instance->setBillingDays($value);
        return $this;
    }

    /**
     * Unsets billing days field.
     */
    public function unsetBillingDays(): self
    {
        $this->instance->unsetBillingDays();
        return $this;
    }

    /**
     * Sets shippable field.
     */
    public function shippable(?bool $value): self
    {
        $this->instance->setShippable($value);
        return $this;
    }

    /**
     * Unsets shippable field.
     */
    public function unsetShippable(): self
    {
        $this->instance->unsetShippable();
        return $this;
    }

    /**
     * Sets metadata field.
     */
    public function metadata(?array $value): self
    {
        $this->instance->setMetadata($value);
        return $this;
    }

    /**
     * Unsets metadata field.
     */
    public function unsetMetadata(): self
    {
        $this->instance->unsetMetadata();
        return $this;
    }

    /**
     * Sets trial period days field.
     */
    public function trialPeriodDays(?int $value): self
    {
        $this->instance->setTrialPeriodDays($value);
        return $this;
    }

    /**
     * Unsets trial period days field.
     */
    public function unsetTrialPeriodDays(): self
    {
        $this->instance->unsetTrialPeriodDays();
        return $this;
    }

    /**
     * Sets minimum price field.
     */
    public function minimumPrice(?int $value): self
    {
        $this->instance->setMinimumPrice($value);
        return $this;
    }

    /**
     * Unsets minimum price field.
     */
    public function unsetMinimumPrice(): self
    {
        $this->instance->unsetMinimumPrice();
        return $this;
    }

    /**
     * Sets deleted at field.
     */
    public function deletedAt(?\DateTime $value): self
    {
        $this->instance->setDeletedAt($value);
        return $this;
    }

    /**
     * Unsets deleted at field.
     */
    public function unsetDeletedAt(): self
    {
        $this->instance->unsetDeletedAt();
        return $this;
    }

    /**
     * Initializes a new get plan response object.
     */
    public function build(): GetPlanResponse
    {
        return CoreHelper::clone($this->instance);
    }
}
