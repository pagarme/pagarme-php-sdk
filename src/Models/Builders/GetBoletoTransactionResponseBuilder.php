<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models\Builders;

use Core\Utils\CoreHelper;
use PagarmeApiSDKLib\Models\GetAntifraudResponse;
use PagarmeApiSDKLib\Models\GetBillingAddressResponse;
use PagarmeApiSDKLib\Models\GetBoletoTransactionResponse;
use PagarmeApiSDKLib\Models\GetFineResponse;
use PagarmeApiSDKLib\Models\GetGatewayResponseResponse;
use PagarmeApiSDKLib\Models\GetInterestResponse;

/**
 * Builder for model GetBoletoTransactionResponse
 *
 * @see GetBoletoTransactionResponse
 */
class GetBoletoTransactionResponseBuilder
{
    /**
     * @var GetBoletoTransactionResponse
     */
    private $instance;

    private function __construct(GetBoletoTransactionResponse $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new get boleto transaction response Builder object.
     */
    public static function init(): self
    {
        return new self(new GetBoletoTransactionResponse());
    }

    /**
     * Sets gateway id field.
     */
    public function gatewayId(?string $value): self
    {
        $this->instance->setGatewayId($value);
        return $this;
    }

    /**
     * Unsets gateway id field.
     */
    public function unsetGatewayId(): self
    {
        $this->instance->unsetGatewayId();
        return $this;
    }

    /**
     * Sets amount field.
     */
    public function amount(?int $value): self
    {
        $this->instance->setAmount($value);
        return $this;
    }

    /**
     * Unsets amount field.
     */
    public function unsetAmount(): self
    {
        $this->instance->unsetAmount();
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Unsets status field.
     */
    public function unsetStatus(): self
    {
        $this->instance->unsetStatus();
        return $this;
    }

    /**
     * Sets success field.
     */
    public function success(?bool $value): self
    {
        $this->instance->setSuccess($value);
        return $this;
    }

    /**
     * Unsets success field.
     */
    public function unsetSuccess(): self
    {
        $this->instance->unsetSuccess();
        return $this;
    }

    /**
     * Sets created at field.
     */
    public function createdAt(?\DateTime $value): self
    {
        $this->instance->setCreatedAt($value);
        return $this;
    }

    /**
     * Unsets created at field.
     */
    public function unsetCreatedAt(): self
    {
        $this->instance->unsetCreatedAt();
        return $this;
    }

    /**
     * Sets updated at field.
     */
    public function updatedAt(?\DateTime $value): self
    {
        $this->instance->setUpdatedAt($value);
        return $this;
    }

    /**
     * Unsets updated at field.
     */
    public function unsetUpdatedAt(): self
    {
        $this->instance->unsetUpdatedAt();
        return $this;
    }

    /**
     * Sets attempt count field.
     */
    public function attemptCount(?int $value): self
    {
        $this->instance->setAttemptCount($value);
        return $this;
    }

    /**
     * Unsets attempt count field.
     */
    public function unsetAttemptCount(): self
    {
        $this->instance->unsetAttemptCount();
        return $this;
    }

    /**
     * Sets max attempts field.
     */
    public function maxAttempts(?int $value): self
    {
        $this->instance->setMaxAttempts($value);
        return $this;
    }

    /**
     * Unsets max attempts field.
     */
    public function unsetMaxAttempts(): self
    {
        $this->instance->unsetMaxAttempts();
        return $this;
    }

    /**
     * Sets splits field.
     */
    public function splits(?array $value): self
    {
        $this->instance->setSplits($value);
        return $this;
    }

    /**
     * Unsets splits field.
     */
    public function unsetSplits(): self
    {
        $this->instance->unsetSplits();
        return $this;
    }

    /**
     * Sets next attempt field.
     */
    public function nextAttempt(?\DateTime $value): self
    {
        $this->instance->setNextAttempt($value);
        return $this;
    }

    /**
     * Unsets next attempt field.
     */
    public function unsetNextAttempt(): self
    {
        $this->instance->unsetNextAttempt();
        return $this;
    }

    /**
     * Sets transaction type field.
     */
    public function transactionType(?string $value): self
    {
        $this->instance->setTransactionType($value);
        return $this;
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Unsets id field.
     */
    public function unsetId(): self
    {
        $this->instance->unsetId();
        return $this;
    }

    /**
     * Sets gateway response field.
     */
    public function gatewayResponse(?GetGatewayResponseResponse $value): self
    {
        $this->instance->setGatewayResponse($value);
        return $this;
    }

    /**
     * Unsets gateway response field.
     */
    public function unsetGatewayResponse(): self
    {
        $this->instance->unsetGatewayResponse();
        return $this;
    }

    /**
     * Sets antifraud response field.
     */
    public function antifraudResponse(?GetAntifraudResponse $value): self
    {
        $this->instance->setAntifraudResponse($value);
        return $this;
    }

    /**
     * Unsets antifraud response field.
     */
    public function unsetAntifraudResponse(): self
    {
        $this->instance->unsetAntifraudResponse();
        return $this;
    }

    /**
     * Sets metadata field.
     */
    public function metadata(?array $value): self
    {
        $this->instance->setMetadata($value);
        return $this;
    }

    /**
     * Unsets metadata field.
     */
    public function unsetMetadata(): self
    {
        $this->instance->unsetMetadata();
        return $this;
    }

    /**
     * Sets split field.
     */
    public function split(?array $value): self
    {
        $this->instance->setSplit($value);
        return $this;
    }

    /**
     * Unsets split field.
     */
    public function unsetSplit(): self
    {
        $this->instance->unsetSplit();
        return $this;
    }

    /**
     * Sets interest field.
     */
    public function interest(?GetInterestResponse $value): self
    {
        $this->instance->setInterest($value);
        return $this;
    }

    /**
     * Unsets interest field.
     */
    public function unsetInterest(): self
    {
        $this->instance->unsetInterest();
        return $this;
    }

    /**
     * Sets fine field.
     */
    public function fine(?GetFineResponse $value): self
    {
        $this->instance->setFine($value);
        return $this;
    }

    /**
     * Unsets fine field.
     */
    public function unsetFine(): self
    {
        $this->instance->unsetFine();
        return $this;
    }

    /**
     * Sets max days to pay past due field.
     */
    public function maxDaysToPayPastDue(?int $value): self
    {
        $this->instance->setMaxDaysToPayPastDue($value);
        return $this;
    }

    /**
     * Unsets max days to pay past due field.
     */
    public function unsetMaxDaysToPayPastDue(): self
    {
        $this->instance->unsetMaxDaysToPayPastDue();
        return $this;
    }

    /**
     * Sets url field.
     */
    public function url(?string $value): self
    {
        $this->instance->setUrl($value);
        return $this;
    }

    /**
     * Unsets url field.
     */
    public function unsetUrl(): self
    {
        $this->instance->unsetUrl();
        return $this;
    }

    /**
     * Sets barcode field.
     */
    public function barcode(?string $value): self
    {
        $this->instance->setBarcode($value);
        return $this;
    }

    /**
     * Unsets barcode field.
     */
    public function unsetBarcode(): self
    {
        $this->instance->unsetBarcode();
        return $this;
    }

    /**
     * Sets nosso numero field.
     */
    public function nossoNumero(?string $value): self
    {
        $this->instance->setNossoNumero($value);
        return $this;
    }

    /**
     * Unsets nosso numero field.
     */
    public function unsetNossoNumero(): self
    {
        $this->instance->unsetNossoNumero();
        return $this;
    }

    /**
     * Sets bank field.
     */
    public function bank(?string $value): self
    {
        $this->instance->setBank($value);
        return $this;
    }

    /**
     * Unsets bank field.
     */
    public function unsetBank(): self
    {
        $this->instance->unsetBank();
        return $this;
    }

    /**
     * Sets document number field.
     */
    public function documentNumber(?string $value): self
    {
        $this->instance->setDocumentNumber($value);
        return $this;
    }

    /**
     * Unsets document number field.
     */
    public function unsetDocumentNumber(): self
    {
        $this->instance->unsetDocumentNumber();
        return $this;
    }

    /**
     * Sets instructions field.
     */
    public function instructions(?string $value): self
    {
        $this->instance->setInstructions($value);
        return $this;
    }

    /**
     * Unsets instructions field.
     */
    public function unsetInstructions(): self
    {
        $this->instance->unsetInstructions();
        return $this;
    }

    /**
     * Sets billing address field.
     */
    public function billingAddress(?GetBillingAddressResponse $value): self
    {
        $this->instance->setBillingAddress($value);
        return $this;
    }

    /**
     * Unsets billing address field.
     */
    public function unsetBillingAddress(): self
    {
        $this->instance->unsetBillingAddress();
        return $this;
    }

    /**
     * Sets due at field.
     */
    public function dueAt(?\DateTime $value): self
    {
        $this->instance->setDueAt($value);
        return $this;
    }

    /**
     * Unsets due at field.
     */
    public function unsetDueAt(): self
    {
        $this->instance->unsetDueAt();
        return $this;
    }

    /**
     * Sets qr code field.
     */
    public function qrCode(?string $value): self
    {
        $this->instance->setQrCode($value);
        return $this;
    }

    /**
     * Unsets qr code field.
     */
    public function unsetQrCode(): self
    {
        $this->instance->unsetQrCode();
        return $this;
    }

    /**
     * Sets line field.
     */
    public function line(?string $value): self
    {
        $this->instance->setLine($value);
        return $this;
    }

    /**
     * Unsets line field.
     */
    public function unsetLine(): self
    {
        $this->instance->unsetLine();
        return $this;
    }

    /**
     * Sets pdf password field.
     */
    public function pdfPassword(?string $value): self
    {
        $this->instance->setPdfPassword($value);
        return $this;
    }

    /**
     * Unsets pdf password field.
     */
    public function unsetPdfPassword(): self
    {
        $this->instance->unsetPdfPassword();
        return $this;
    }

    /**
     * Sets pdf field.
     */
    public function pdf(?string $value): self
    {
        $this->instance->setPdf($value);
        return $this;
    }

    /**
     * Unsets pdf field.
     */
    public function unsetPdf(): self
    {
        $this->instance->unsetPdf();
        return $this;
    }

    /**
     * Sets paid at field.
     */
    public function paidAt(?\DateTime $value): self
    {
        $this->instance->setPaidAt($value);
        return $this;
    }

    /**
     * Unsets paid at field.
     */
    public function unsetPaidAt(): self
    {
        $this->instance->unsetPaidAt();
        return $this;
    }

    /**
     * Sets paid amount field.
     */
    public function paidAmount(?string $value): self
    {
        $this->instance->setPaidAmount($value);
        return $this;
    }

    /**
     * Unsets paid amount field.
     */
    public function unsetPaidAmount(): self
    {
        $this->instance->unsetPaidAmount();
        return $this;
    }

    /**
     * Sets type field.
     */
    public function type(?string $value): self
    {
        $this->instance->setType($value);
        return $this;
    }

    /**
     * Unsets type field.
     */
    public function unsetType(): self
    {
        $this->instance->unsetType();
        return $this;
    }

    /**
     * Sets credit at field.
     */
    public function creditAt(?\DateTime $value): self
    {
        $this->instance->setCreditAt($value);
        return $this;
    }

    /**
     * Unsets credit at field.
     */
    public function unsetCreditAt(): self
    {
        $this->instance->unsetCreditAt();
        return $this;
    }

    /**
     * Sets statement descriptor field.
     */
    public function statementDescriptor(?string $value): self
    {
        $this->instance->setStatementDescriptor($value);
        return $this;
    }

    /**
     * Unsets statement descriptor field.
     */
    public function unsetStatementDescriptor(): self
    {
        $this->instance->unsetStatementDescriptor();
        return $this;
    }

    /**
     * Initializes a new get boleto transaction response object.
     */
    public function build(): GetBoletoTransactionResponse
    {
        return CoreHelper::clone($this->instance);
    }
}
