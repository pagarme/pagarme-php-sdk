<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models\Builders;

use Core\Utils\CoreHelper;
use PagarmeApiSDKLib\Models\CreateThreeDSecureRequest;

/**
 * Builder for model CreateThreeDSecureRequest
 *
 * @see CreateThreeDSecureRequest
 */
class CreateThreeDSecureRequestBuilder
{
    /**
     * @var CreateThreeDSecureRequest
     */
    private $instance;

    private function __construct(CreateThreeDSecureRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new create three dsecure request Builder object.
     */
    public static function init(string $mpi): self
    {
        return new self(new CreateThreeDSecureRequest($mpi));
    }

    /**
     * Sets cavv field.
     */
    public function cavv(?string $value): self
    {
        $this->instance->setCavv($value);
        return $this;
    }

    /**
     * Sets eci field.
     */
    public function eci(?string $value): self
    {
        $this->instance->setEci($value);
        return $this;
    }

    /**
     * Sets transaction id field.
     */
    public function transactionId(?string $value): self
    {
        $this->instance->setTransactionId($value);
        return $this;
    }

    /**
     * Sets success url field.
     */
    public function successUrl(?string $value): self
    {
        $this->instance->setSuccessUrl($value);
        return $this;
    }

    /**
     * Sets ds transaction id field.
     */
    public function dsTransactionId(?string $value): self
    {
        $this->instance->setDsTransactionId($value);
        return $this;
    }

    /**
     * Sets version field.
     */
    public function version(?string $value): self
    {
        $this->instance->setVersion($value);
        return $this;
    }

    /**
     * Initializes a new create three dsecure request object.
     */
    public function build(): CreateThreeDSecureRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
