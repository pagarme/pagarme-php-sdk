<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models\Builders;

use Core\Utils\CoreHelper;
use PagarmeApiSDKLib\Models\GetSubscriptionItemResponse;
use PagarmeApiSDKLib\Models\GetUsageResponse;

/**
 * Builder for model GetUsageResponse
 *
 * @see GetUsageResponse
 */
class GetUsageResponseBuilder
{
    /**
     * @var GetUsageResponse
     */
    private $instance;

    private function __construct(GetUsageResponse $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new get usage response Builder object.
     */
    public static function init(): self
    {
        return new self(new GetUsageResponse());
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Unsets id field.
     */
    public function unsetId(): self
    {
        $this->instance->unsetId();
        return $this;
    }

    /**
     * Sets quantity field.
     */
    public function quantity(?int $value): self
    {
        $this->instance->setQuantity($value);
        return $this;
    }

    /**
     * Unsets quantity field.
     */
    public function unsetQuantity(): self
    {
        $this->instance->unsetQuantity();
        return $this;
    }

    /**
     * Sets description field.
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Unsets description field.
     */
    public function unsetDescription(): self
    {
        $this->instance->unsetDescription();
        return $this;
    }

    /**
     * Sets used at field.
     */
    public function usedAt(?\DateTime $value): self
    {
        $this->instance->setUsedAt($value);
        return $this;
    }

    /**
     * Unsets used at field.
     */
    public function unsetUsedAt(): self
    {
        $this->instance->unsetUsedAt();
        return $this;
    }

    /**
     * Sets created at field.
     */
    public function createdAt(?\DateTime $value): self
    {
        $this->instance->setCreatedAt($value);
        return $this;
    }

    /**
     * Unsets created at field.
     */
    public function unsetCreatedAt(): self
    {
        $this->instance->unsetCreatedAt();
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Unsets status field.
     */
    public function unsetStatus(): self
    {
        $this->instance->unsetStatus();
        return $this;
    }

    /**
     * Sets deleted at field.
     */
    public function deletedAt(?\DateTime $value): self
    {
        $this->instance->setDeletedAt($value);
        return $this;
    }

    /**
     * Unsets deleted at field.
     */
    public function unsetDeletedAt(): self
    {
        $this->instance->unsetDeletedAt();
        return $this;
    }

    /**
     * Sets subscription item field.
     */
    public function subscriptionItem(?GetSubscriptionItemResponse $value): self
    {
        $this->instance->setSubscriptionItem($value);
        return $this;
    }

    /**
     * Unsets subscription item field.
     */
    public function unsetSubscriptionItem(): self
    {
        $this->instance->unsetSubscriptionItem();
        return $this;
    }

    /**
     * Sets code field.
     */
    public function code(?string $value): self
    {
        $this->instance->setCode($value);
        return $this;
    }

    /**
     * Unsets code field.
     */
    public function unsetCode(): self
    {
        $this->instance->unsetCode();
        return $this;
    }

    /**
     * Sets group field.
     */
    public function group(?string $value): self
    {
        $this->instance->setGroup($value);
        return $this;
    }

    /**
     * Unsets group field.
     */
    public function unsetGroup(): self
    {
        $this->instance->unsetGroup();
        return $this;
    }

    /**
     * Sets amount field.
     */
    public function amount(?int $value): self
    {
        $this->instance->setAmount($value);
        return $this;
    }

    /**
     * Unsets amount field.
     */
    public function unsetAmount(): self
    {
        $this->instance->unsetAmount();
        return $this;
    }

    /**
     * Initializes a new get usage response object.
     */
    public function build(): GetUsageResponse
    {
        return CoreHelper::clone($this->instance);
    }
}
