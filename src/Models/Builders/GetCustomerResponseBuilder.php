<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models\Builders;

use Core\Utils\CoreHelper;
use PagarmeApiSDKLib\Models\GetAddressResponse;
use PagarmeApiSDKLib\Models\GetCustomerResponse;
use PagarmeApiSDKLib\Models\GetPhonesResponse;

/**
 * Builder for model GetCustomerResponse
 *
 * @see GetCustomerResponse
 */
class GetCustomerResponseBuilder
{
    /**
     * @var GetCustomerResponse
     */
    private $instance;

    private function __construct(GetCustomerResponse $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new get customer response Builder object.
     */
    public static function init(): self
    {
        return new self(new GetCustomerResponse());
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Unsets id field.
     */
    public function unsetId(): self
    {
        $this->instance->unsetId();
        return $this;
    }

    /**
     * Sets name field.
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Unsets name field.
     */
    public function unsetName(): self
    {
        $this->instance->unsetName();
        return $this;
    }

    /**
     * Sets email field.
     */
    public function email(?string $value): self
    {
        $this->instance->setEmail($value);
        return $this;
    }

    /**
     * Unsets email field.
     */
    public function unsetEmail(): self
    {
        $this->instance->unsetEmail();
        return $this;
    }

    /**
     * Sets delinquent field.
     */
    public function delinquent(?bool $value): self
    {
        $this->instance->setDelinquent($value);
        return $this;
    }

    /**
     * Unsets delinquent field.
     */
    public function unsetDelinquent(): self
    {
        $this->instance->unsetDelinquent();
        return $this;
    }

    /**
     * Sets created at field.
     */
    public function createdAt(?\DateTime $value): self
    {
        $this->instance->setCreatedAt($value);
        return $this;
    }

    /**
     * Unsets created at field.
     */
    public function unsetCreatedAt(): self
    {
        $this->instance->unsetCreatedAt();
        return $this;
    }

    /**
     * Sets updated at field.
     */
    public function updatedAt(?\DateTime $value): self
    {
        $this->instance->setUpdatedAt($value);
        return $this;
    }

    /**
     * Unsets updated at field.
     */
    public function unsetUpdatedAt(): self
    {
        $this->instance->unsetUpdatedAt();
        return $this;
    }

    /**
     * Sets document field.
     */
    public function document(?string $value): self
    {
        $this->instance->setDocument($value);
        return $this;
    }

    /**
     * Unsets document field.
     */
    public function unsetDocument(): self
    {
        $this->instance->unsetDocument();
        return $this;
    }

    /**
     * Sets type field.
     */
    public function type(?string $value): self
    {
        $this->instance->setType($value);
        return $this;
    }

    /**
     * Unsets type field.
     */
    public function unsetType(): self
    {
        $this->instance->unsetType();
        return $this;
    }

    /**
     * Sets fb access token field.
     */
    public function fbAccessToken(?string $value): self
    {
        $this->instance->setFbAccessToken($value);
        return $this;
    }

    /**
     * Unsets fb access token field.
     */
    public function unsetFbAccessToken(): self
    {
        $this->instance->unsetFbAccessToken();
        return $this;
    }

    /**
     * Sets address field.
     */
    public function address(?GetAddressResponse $value): self
    {
        $this->instance->setAddress($value);
        return $this;
    }

    /**
     * Unsets address field.
     */
    public function unsetAddress(): self
    {
        $this->instance->unsetAddress();
        return $this;
    }

    /**
     * Sets metadata field.
     */
    public function metadata(?array $value): self
    {
        $this->instance->setMetadata($value);
        return $this;
    }

    /**
     * Unsets metadata field.
     */
    public function unsetMetadata(): self
    {
        $this->instance->unsetMetadata();
        return $this;
    }

    /**
     * Sets phones field.
     */
    public function phones(?GetPhonesResponse $value): self
    {
        $this->instance->setPhones($value);
        return $this;
    }

    /**
     * Unsets phones field.
     */
    public function unsetPhones(): self
    {
        $this->instance->unsetPhones();
        return $this;
    }

    /**
     * Sets fb id field.
     */
    public function fbId(?int $value): self
    {
        $this->instance->setFbId($value);
        return $this;
    }

    /**
     * Unsets fb id field.
     */
    public function unsetFbId(): self
    {
        $this->instance->unsetFbId();
        return $this;
    }

    /**
     * Sets code field.
     */
    public function code(?string $value): self
    {
        $this->instance->setCode($value);
        return $this;
    }

    /**
     * Unsets code field.
     */
    public function unsetCode(): self
    {
        $this->instance->unsetCode();
        return $this;
    }

    /**
     * Sets document type field.
     */
    public function documentType(?string $value): self
    {
        $this->instance->setDocumentType($value);
        return $this;
    }

    /**
     * Unsets document type field.
     */
    public function unsetDocumentType(): self
    {
        $this->instance->unsetDocumentType();
        return $this;
    }

    /**
     * Initializes a new get customer response object.
     */
    public function build(): GetCustomerResponse
    {
        return CoreHelper::clone($this->instance);
    }
}
