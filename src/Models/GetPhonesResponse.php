<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

class GetPhonesResponse implements \JsonSerializable
{
    /**
     * @var array
     */
    private $homePhone = [];

    /**
     * @var array
     */
    private $mobilePhone = [];

    /**
     * Returns Home Phone.
     */
    public function getHomePhone(): ?GetPhoneResponse
    {
        if (count($this->homePhone) == 0) {
            return null;
        }
        return $this->homePhone['value'];
    }

    /**
     * Sets Home Phone.
     *
     * @maps home_phone
     */
    public function setHomePhone(?GetPhoneResponse $homePhone): void
    {
        $this->homePhone['value'] = $homePhone;
    }

    /**
     * Unsets Home Phone.
     */
    public function unsetHomePhone(): void
    {
        $this->homePhone = [];
    }

    /**
     * Returns Mobile Phone.
     */
    public function getMobilePhone(): ?GetPhoneResponse
    {
        if (count($this->mobilePhone) == 0) {
            return null;
        }
        return $this->mobilePhone['value'];
    }

    /**
     * Sets Mobile Phone.
     *
     * @maps mobile_phone
     */
    public function setMobilePhone(?GetPhoneResponse $mobilePhone): void
    {
        $this->mobilePhone['value'] = $mobilePhone;
    }

    /**
     * Unsets Mobile Phone.
     */
    public function unsetMobilePhone(): void
    {
        $this->mobilePhone = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->homePhone)) {
            $json['home_phone']   = $this->homePhone['value'];
        }
        if (!empty($this->mobilePhone)) {
            $json['mobile_phone'] = $this->mobilePhone['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
