<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

/**
 * Response object for getting a price bracket
 */
class GetPriceBracketResponse implements \JsonSerializable
{
    /**
     * @var array
     */
    private $startQuantity = [];

    /**
     * @var array
     */
    private $price = [];

    /**
     * @var array
     */
    private $endQuantity = [];

    /**
     * @var array
     */
    private $overagePrice = [];

    /**
     * Returns Start Quantity.
     */
    public function getStartQuantity(): ?int
    {
        if (count($this->startQuantity) == 0) {
            return null;
        }
        return $this->startQuantity['value'];
    }

    /**
     * Sets Start Quantity.
     *
     * @maps start_quantity
     */
    public function setStartQuantity(?int $startQuantity): void
    {
        $this->startQuantity['value'] = $startQuantity;
    }

    /**
     * Unsets Start Quantity.
     */
    public function unsetStartQuantity(): void
    {
        $this->startQuantity = [];
    }

    /**
     * Returns Price.
     */
    public function getPrice(): ?int
    {
        if (count($this->price) == 0) {
            return null;
        }
        return $this->price['value'];
    }

    /**
     * Sets Price.
     *
     * @maps price
     */
    public function setPrice(?int $price): void
    {
        $this->price['value'] = $price;
    }

    /**
     * Unsets Price.
     */
    public function unsetPrice(): void
    {
        $this->price = [];
    }

    /**
     * Returns End Quantity.
     */
    public function getEndQuantity(): ?int
    {
        if (count($this->endQuantity) == 0) {
            return null;
        }
        return $this->endQuantity['value'];
    }

    /**
     * Sets End Quantity.
     *
     * @maps end_quantity
     */
    public function setEndQuantity(?int $endQuantity): void
    {
        $this->endQuantity['value'] = $endQuantity;
    }

    /**
     * Unsets End Quantity.
     */
    public function unsetEndQuantity(): void
    {
        $this->endQuantity = [];
    }

    /**
     * Returns Overage Price.
     */
    public function getOveragePrice(): ?int
    {
        if (count($this->overagePrice) == 0) {
            return null;
        }
        return $this->overagePrice['value'];
    }

    /**
     * Sets Overage Price.
     *
     * @maps overage_price
     */
    public function setOveragePrice(?int $overagePrice): void
    {
        $this->overagePrice['value'] = $overagePrice;
    }

    /**
     * Unsets Overage Price.
     */
    public function unsetOveragePrice(): void
    {
        $this->overagePrice = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->startQuantity)) {
            $json['start_quantity'] = $this->startQuantity['value'];
        }
        if (!empty($this->price)) {
            $json['price']          = $this->price['value'];
        }
        if (!empty($this->endQuantity)) {
            $json['end_quantity']   = $this->endQuantity['value'];
        }
        if (!empty($this->overagePrice)) {
            $json['overage_price']  = $this->overagePrice['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
