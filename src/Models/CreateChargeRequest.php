<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\Utils\DateTimeHelper;
use stdClass;

/**
 * Request for creating a new charge
 */
class CreateChargeRequest implements \JsonSerializable
{
    /**
     * @var array
     */
    private $code = [];

    /**
     * @var int
     */
    private $amount;

    /**
     * @var array
     */
    private $customerId = [];

    /**
     * @var array
     */
    private $customer = [];

    /**
     * @var CreatePaymentRequest
     */
    private $payment;

    /**
     * @var array
     */
    private $metadata = [];

    /**
     * @var array
     */
    private $dueAt = [];

    /**
     * @var array
     */
    private $antifraud = [];

    /**
     * @var string
     */
    private $orderId;

    /**
     * @param int $amount
     * @param CreatePaymentRequest $payment
     * @param string $orderId
     */
    public function __construct(int $amount, CreatePaymentRequest $payment, string $orderId)
    {
        $this->amount = $amount;
        $this->payment = $payment;
        $this->orderId = $orderId;
    }

    /**
     * Returns Code.
     * Code
     */
    public function getCode(): ?string
    {
        if (count($this->code) == 0) {
            return null;
        }
        return $this->code['value'];
    }

    /**
     * Sets Code.
     * Code
     *
     * @maps code
     */
    public function setCode(?string $code): void
    {
        $this->code['value'] = $code;
    }

    /**
     * Unsets Code.
     * Code
     */
    public function unsetCode(): void
    {
        $this->code = [];
    }

    /**
     * Returns Amount.
     * The amount of the charge, in cents
     */
    public function getAmount(): int
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     * The amount of the charge, in cents
     *
     * @required
     * @maps amount
     */
    public function setAmount(int $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Customer Id.
     * The customer's id
     */
    public function getCustomerId(): ?string
    {
        if (count($this->customerId) == 0) {
            return null;
        }
        return $this->customerId['value'];
    }

    /**
     * Sets Customer Id.
     * The customer's id
     *
     * @maps customer_id
     */
    public function setCustomerId(?string $customerId): void
    {
        $this->customerId['value'] = $customerId;
    }

    /**
     * Unsets Customer Id.
     * The customer's id
     */
    public function unsetCustomerId(): void
    {
        $this->customerId = [];
    }

    /**
     * Returns Customer.
     * Customer data
     */
    public function getCustomer(): ?CreateCustomerRequest
    {
        if (count($this->customer) == 0) {
            return null;
        }
        return $this->customer['value'];
    }

    /**
     * Sets Customer.
     * Customer data
     *
     * @maps customer
     */
    public function setCustomer(?CreateCustomerRequest $customer): void
    {
        $this->customer['value'] = $customer;
    }

    /**
     * Unsets Customer.
     * Customer data
     */
    public function unsetCustomer(): void
    {
        $this->customer = [];
    }

    /**
     * Returns Payment.
     * Payment data
     */
    public function getPayment(): CreatePaymentRequest
    {
        return $this->payment;
    }

    /**
     * Sets Payment.
     * Payment data
     *
     * @required
     * @maps payment
     */
    public function setPayment(CreatePaymentRequest $payment): void
    {
        $this->payment = $payment;
    }

    /**
     * Returns Metadata.
     * Metadata
     *
     * @return array<string,string>|null
     */
    public function getMetadata(): ?array
    {
        if (count($this->metadata) == 0) {
            return null;
        }
        return $this->metadata['value'];
    }

    /**
     * Sets Metadata.
     * Metadata
     *
     * @maps metadata
     *
     * @param array<string,string>|null $metadata
     */
    public function setMetadata(?array $metadata): void
    {
        $this->metadata['value'] = $metadata;
    }

    /**
     * Unsets Metadata.
     * Metadata
     */
    public function unsetMetadata(): void
    {
        $this->metadata = [];
    }

    /**
     * Returns Due At.
     * The charge due date
     */
    public function getDueAt(): ?\DateTime
    {
        if (count($this->dueAt) == 0) {
            return null;
        }
        return $this->dueAt['value'];
    }

    /**
     * Sets Due At.
     * The charge due date
     *
     * @maps due_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDueAt(?\DateTime $dueAt): void
    {
        $this->dueAt['value'] = $dueAt;
    }

    /**
     * Unsets Due At.
     * The charge due date
     */
    public function unsetDueAt(): void
    {
        $this->dueAt = [];
    }

    /**
     * Returns Antifraud.
     */
    public function getAntifraud(): ?CreateAntifraudRequest
    {
        if (count($this->antifraud) == 0) {
            return null;
        }
        return $this->antifraud['value'];
    }

    /**
     * Sets Antifraud.
     *
     * @maps antifraud
     */
    public function setAntifraud(?CreateAntifraudRequest $antifraud): void
    {
        $this->antifraud['value'] = $antifraud;
    }

    /**
     * Unsets Antifraud.
     */
    public function unsetAntifraud(): void
    {
        $this->antifraud = [];
    }

    /**
     * Returns Order Id.
     * Order Id
     */
    public function getOrderId(): string
    {
        return $this->orderId;
    }

    /**
     * Sets Order Id.
     * Order Id
     *
     * @required
     * @maps order_id
     */
    public function setOrderId(string $orderId): void
    {
        $this->orderId = $orderId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->code)) {
            $json['code']        = $this->code['value'];
        }
        $json['amount']          = $this->amount;
        if (!empty($this->customerId)) {
            $json['customer_id'] = $this->customerId['value'];
        }
        if (!empty($this->customer)) {
            $json['customer']    = $this->customer['value'];
        }
        $json['payment']         = $this->payment;
        if (!empty($this->metadata)) {
            $json['metadata']    = $this->metadata['value'];
        }
        if (!empty($this->dueAt)) {
            $json['due_at']      = DateTimeHelper::toRfc3339DateTime($this->dueAt['value']);
        }
        if (!empty($this->antifraud)) {
            $json['antifraud']   = $this->antifraud['value'];
        }
        $json['order_id']        = $this->orderId;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
