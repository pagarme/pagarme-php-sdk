<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

/**
 * Generic response object for getting a MovementObjectBase.
 *
 * @discriminator object
 * @discriminatorType MovementObject
 */
class GetMovementObjectBaseResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $object;

    /**
     * @var array
     */
    private $id = [];

    /**
     * @var array
     */
    private $status = [];

    /**
     * @var array
     */
    private $amount = [];

    /**
     * @var array
     */
    private $createdAt = [];

    /**
     * @var array
     */
    private $type = [];

    /**
     * @var array
     */
    private $chargeId = [];

    /**
     * @var array
     */
    private $gatewayId = [];

    /**
     * Returns Object.
     */
    public function getObject(): ?string
    {
        return $this->object;
    }

    /**
     * Sets Object.
     *
     * @maps object
     */
    public function setObject(?string $object): void
    {
        $this->object = $object;
    }

    /**
     * Returns Id.
     */
    public function getId(): ?string
    {
        if (count($this->id) == 0) {
            return null;
        }
        return $this->id['value'];
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id['value'] = $id;
    }

    /**
     * Unsets Id.
     */
    public function unsetId(): void
    {
        $this->id = [];
    }

    /**
     * Returns Status.
     */
    public function getStatus(): ?string
    {
        if (count($this->status) == 0) {
            return null;
        }
        return $this->status['value'];
    }

    /**
     * Sets Status.
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status['value'] = $status;
    }

    /**
     * Unsets Status.
     */
    public function unsetStatus(): void
    {
        $this->status = [];
    }

    /**
     * Returns Amount.
     */
    public function getAmount(): ?string
    {
        if (count($this->amount) == 0) {
            return null;
        }
        return $this->amount['value'];
    }

    /**
     * Sets Amount.
     *
     * @maps amount
     */
    public function setAmount(?string $amount): void
    {
        $this->amount['value'] = $amount;
    }

    /**
     * Unsets Amount.
     */
    public function unsetAmount(): void
    {
        $this->amount = [];
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?string
    {
        if (count($this->createdAt) == 0) {
            return null;
        }
        return $this->createdAt['value'];
    }

    /**
     * Sets Created At.
     *
     * @maps created_at
     */
    public function setCreatedAt(?string $createdAt): void
    {
        $this->createdAt['value'] = $createdAt;
    }

    /**
     * Unsets Created At.
     */
    public function unsetCreatedAt(): void
    {
        $this->createdAt = [];
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        if (count($this->type) == 0) {
            return null;
        }
        return $this->type['value'];
    }

    /**
     * Sets Type.
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type['value'] = $type;
    }

    /**
     * Unsets Type.
     */
    public function unsetType(): void
    {
        $this->type = [];
    }

    /**
     * Returns Charge Id.
     */
    public function getChargeId(): ?string
    {
        if (count($this->chargeId) == 0) {
            return null;
        }
        return $this->chargeId['value'];
    }

    /**
     * Sets Charge Id.
     *
     * @maps charge_id
     */
    public function setChargeId(?string $chargeId): void
    {
        $this->chargeId['value'] = $chargeId;
    }

    /**
     * Unsets Charge Id.
     */
    public function unsetChargeId(): void
    {
        $this->chargeId = [];
    }

    /**
     * Returns Gateway Id.
     */
    public function getGatewayId(): ?string
    {
        if (count($this->gatewayId) == 0) {
            return null;
        }
        return $this->gatewayId['value'];
    }

    /**
     * Sets Gateway Id.
     *
     * @maps gateway_id
     */
    public function setGatewayId(?string $gatewayId): void
    {
        $this->gatewayId['value'] = $gatewayId;
    }

    /**
     * Unsets Gateway Id.
     */
    public function unsetGatewayId(): void
    {
        $this->gatewayId = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['object']         = $this->object ?? 'MovementObject';
        if (!empty($this->id)) {
            $json['id']         = $this->id['value'];
        }
        if (!empty($this->status)) {
            $json['status']     = $this->status['value'];
        }
        if (!empty($this->amount)) {
            $json['amount']     = $this->amount['value'];
        }
        if (!empty($this->createdAt)) {
            $json['created_at'] = $this->createdAt['value'];
        }
        if (!empty($this->type)) {
            $json['type']       = $this->type['value'];
        }
        if (!empty($this->chargeId)) {
            $json['charge_id']  = $this->chargeId['value'];
        }
        if (!empty($this->gatewayId)) {
            $json['gateway_id'] = $this->gatewayId['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
