<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

/**
 * 3D-S payment authentication response
 */
class GetThreeDSecureResponse implements \JsonSerializable
{
    /**
     * @var array
     */
    private $mpi = [];

    /**
     * @var array
     */
    private $eci = [];

    /**
     * @var array
     */
    private $cavv = [];

    /**
     * @var array
     */
    private $transactionId = [];

    /**
     * @var array
     */
    private $successUrl = [];

    /**
     * Returns Mpi.
     * MPI Vendor
     */
    public function getMpi(): ?string
    {
        if (count($this->mpi) == 0) {
            return null;
        }
        return $this->mpi['value'];
    }

    /**
     * Sets Mpi.
     * MPI Vendor
     *
     * @maps mpi
     */
    public function setMpi(?string $mpi): void
    {
        $this->mpi['value'] = $mpi;
    }

    /**
     * Unsets Mpi.
     * MPI Vendor
     */
    public function unsetMpi(): void
    {
        $this->mpi = [];
    }

    /**
     * Returns Eci.
     * Electronic Commerce Indicator (ECI) (Opcional)
     */
    public function getEci(): ?string
    {
        if (count($this->eci) == 0) {
            return null;
        }
        return $this->eci['value'];
    }

    /**
     * Sets Eci.
     * Electronic Commerce Indicator (ECI) (Opcional)
     *
     * @maps eci
     */
    public function setEci(?string $eci): void
    {
        $this->eci['value'] = $eci;
    }

    /**
     * Unsets Eci.
     * Electronic Commerce Indicator (ECI) (Opcional)
     */
    public function unsetEci(): void
    {
        $this->eci = [];
    }

    /**
     * Returns Cavv.
     * Online payment cryptogram, definido pelo 3-D Secure.
     */
    public function getCavv(): ?string
    {
        if (count($this->cavv) == 0) {
            return null;
        }
        return $this->cavv['value'];
    }

    /**
     * Sets Cavv.
     * Online payment cryptogram, definido pelo 3-D Secure.
     *
     * @maps cavv
     */
    public function setCavv(?string $cavv): void
    {
        $this->cavv['value'] = $cavv;
    }

    /**
     * Unsets Cavv.
     * Online payment cryptogram, definido pelo 3-D Secure.
     */
    public function unsetCavv(): void
    {
        $this->cavv = [];
    }

    /**
     * Returns Transaction Id.
     * Identificador da transação (XID)
     */
    public function getTransactionId(): ?string
    {
        if (count($this->transactionId) == 0) {
            return null;
        }
        return $this->transactionId['value'];
    }

    /**
     * Sets Transaction Id.
     * Identificador da transação (XID)
     *
     * @maps transaction_Id
     */
    public function setTransactionId(?string $transactionId): void
    {
        $this->transactionId['value'] = $transactionId;
    }

    /**
     * Unsets Transaction Id.
     * Identificador da transação (XID)
     */
    public function unsetTransactionId(): void
    {
        $this->transactionId = [];
    }

    /**
     * Returns Success Url.
     * Url de redirecionamento de sucessso
     */
    public function getSuccessUrl(): ?string
    {
        if (count($this->successUrl) == 0) {
            return null;
        }
        return $this->successUrl['value'];
    }

    /**
     * Sets Success Url.
     * Url de redirecionamento de sucessso
     *
     * @maps success_url
     */
    public function setSuccessUrl(?string $successUrl): void
    {
        $this->successUrl['value'] = $successUrl;
    }

    /**
     * Unsets Success Url.
     * Url de redirecionamento de sucessso
     */
    public function unsetSuccessUrl(): void
    {
        $this->successUrl = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->mpi)) {
            $json['mpi']            = $this->mpi['value'];
        }
        if (!empty($this->eci)) {
            $json['eci']            = $this->eci['value'];
        }
        if (!empty($this->cavv)) {
            $json['cavv']           = $this->cavv['value'];
        }
        if (!empty($this->transactionId)) {
            $json['transaction_Id'] = $this->transactionId['value'];
        }
        if (!empty($this->successUrl)) {
            $json['success_url']    = $this->successUrl['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
