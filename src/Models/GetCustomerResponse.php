<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\Utils\DateTimeHelper;
use stdClass;

/**
 * Response object for getting a customer
 */
class GetCustomerResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $email;

    /**
     * @var bool|null
     */
    private $delinquent;

    /**
     * @var \DateTime|null
     */
    private $createdAt;

    /**
     * @var \DateTime|null
     */
    private $updatedAt;

    /**
     * @var string|null
     */
    private $document;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var string|null
     */
    private $fbAccessToken;

    /**
     * @var GetAddressResponse|null
     */
    private $address;

    /**
     * @var array<string,string>|null
     */
    private $metadata;

    /**
     * @var GetPhonesResponse|null
     */
    private $phones;

    /**
     * @var array
     */
    private $fbId = [];

    /**
     * @var string|null
     */
    private $code;

    /**
     * @var string|null
     */
    private $documentType;

    /**
     * Returns Id.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Email.
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     *
     * @maps email
     */
    public function setEmail(?string $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Delinquent.
     */
    public function getDelinquent(): ?bool
    {
        return $this->delinquent;
    }

    /**
     * Sets Delinquent.
     *
     * @maps delinquent
     */
    public function setDelinquent(?bool $delinquent): void
    {
        $this->delinquent = $delinquent;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @maps created_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(?\DateTime $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): ?\DateTime
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * @maps updated_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setUpdatedAt(?\DateTime $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Document.
     */
    public function getDocument(): ?string
    {
        return $this->document;
    }

    /**
     * Sets Document.
     *
     * @maps document
     */
    public function setDocument(?string $document): void
    {
        $this->document = $document;
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Fb Access Token.
     */
    public function getFbAccessToken(): ?string
    {
        return $this->fbAccessToken;
    }

    /**
     * Sets Fb Access Token.
     *
     * @maps fb_access_token
     */
    public function setFbAccessToken(?string $fbAccessToken): void
    {
        $this->fbAccessToken = $fbAccessToken;
    }

    /**
     * Returns Address.
     */
    public function getAddress(): ?GetAddressResponse
    {
        return $this->address;
    }

    /**
     * Sets Address.
     *
     * @maps address
     */
    public function setAddress(?GetAddressResponse $address): void
    {
        $this->address = $address;
    }

    /**
     * Returns Metadata.
     *
     * @return array<string,string>|null
     */
    public function getMetadata(): ?array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     *
     * @maps metadata
     *
     * @param array<string,string>|null $metadata
     */
    public function setMetadata(?array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Phones.
     */
    public function getPhones(): ?GetPhonesResponse
    {
        return $this->phones;
    }

    /**
     * Sets Phones.
     *
     * @maps phones
     */
    public function setPhones(?GetPhonesResponse $phones): void
    {
        $this->phones = $phones;
    }

    /**
     * Returns Fb Id.
     */
    public function getFbId(): ?int
    {
        if (count($this->fbId) == 0) {
            return null;
        }
        return $this->fbId['value'];
    }

    /**
     * Sets Fb Id.
     *
     * @maps fb_id
     */
    public function setFbId(?int $fbId): void
    {
        $this->fbId['value'] = $fbId;
    }

    /**
     * Unsets Fb Id.
     */
    public function unsetFbId(): void
    {
        $this->fbId = [];
    }

    /**
     * Returns Code.
     * Código de referência do cliente no sistema da loja. Max: 52 caracteres
     */
    public function getCode(): ?string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     * Código de referência do cliente no sistema da loja. Max: 52 caracteres
     *
     * @maps code
     */
    public function setCode(?string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Document Type.
     */
    public function getDocumentType(): ?string
    {
        return $this->documentType;
    }

    /**
     * Sets Document Type.
     *
     * @maps document_type
     */
    public function setDocumentType(?string $documentType): void
    {
        $this->documentType = $documentType;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']              = $this->id;
        $json['name']            = $this->name;
        $json['email']           = $this->email;
        $json['delinquent']      = $this->delinquent;
        $json['created_at']      = DateTimeHelper::toRfc3339DateTime($this->createdAt);
        $json['updated_at']      = DateTimeHelper::toRfc3339DateTime($this->updatedAt);
        $json['document']        = $this->document;
        $json['type']            = $this->type;
        $json['fb_access_token'] = $this->fbAccessToken;
        $json['address']         = $this->address;
        $json['metadata']        = $this->metadata;
        $json['phones']          = $this->phones;
        if (!empty($this->fbId)) {
            $json['fb_id']       = $this->fbId['value'];
        }
        $json['code']            = $this->code;
        $json['document_type']   = $this->documentType;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
