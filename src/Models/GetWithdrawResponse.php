<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\Utils\DateTimeHelper;
use stdClass;

class GetWithdrawResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $gatewayId;

    /**
     * @var int|null
     */
    private $amount;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var \DateTime|null
     */
    private $createdAt;

    /**
     * @var \DateTime|null
     */
    private $updatedAt;

    /**
     * @var array
     */
    private $metadata = [];

    /**
     * @var array
     */
    private $fee = [];

    /**
     * @var array
     */
    private $fundingDate = [];

    /**
     * @var array
     */
    private $fundingEstimatedDate = [];

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var GetWithdrawSourceResponse|null
     */
    private $source;

    /**
     * @var GetWithdrawTargetResponse|null
     */
    private $target;

    /**
     * Returns Id.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Gateway Id.
     */
    public function getGatewayId(): ?string
    {
        return $this->gatewayId;
    }

    /**
     * Sets Gateway Id.
     *
     * @maps gateway_id
     */
    public function setGatewayId(?string $gatewayId): void
    {
        $this->gatewayId = $gatewayId;
    }

    /**
     * Returns Amount.
     */
    public function getAmount(): ?int
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     *
     * @maps amount
     */
    public function setAmount(?int $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @maps created_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(?\DateTime $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): ?\DateTime
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * @maps updated_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setUpdatedAt(?\DateTime $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Metadata.
     *
     * @return string[]|null
     */
    public function getMetadata(): ?array
    {
        if (count($this->metadata) == 0) {
            return null;
        }
        return $this->metadata['value'];
    }

    /**
     * Sets Metadata.
     *
     * @maps metadata
     *
     * @param string[]|null $metadata
     */
    public function setMetadata(?array $metadata): void
    {
        $this->metadata['value'] = $metadata;
    }

    /**
     * Unsets Metadata.
     */
    public function unsetMetadata(): void
    {
        $this->metadata = [];
    }

    /**
     * Returns Fee.
     */
    public function getFee(): ?int
    {
        if (count($this->fee) == 0) {
            return null;
        }
        return $this->fee['value'];
    }

    /**
     * Sets Fee.
     *
     * @maps fee
     */
    public function setFee(?int $fee): void
    {
        $this->fee['value'] = $fee;
    }

    /**
     * Unsets Fee.
     */
    public function unsetFee(): void
    {
        $this->fee = [];
    }

    /**
     * Returns Funding Date.
     */
    public function getFundingDate(): ?\DateTime
    {
        if (count($this->fundingDate) == 0) {
            return null;
        }
        return $this->fundingDate['value'];
    }

    /**
     * Sets Funding Date.
     *
     * @maps funding_date
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setFundingDate(?\DateTime $fundingDate): void
    {
        $this->fundingDate['value'] = $fundingDate;
    }

    /**
     * Unsets Funding Date.
     */
    public function unsetFundingDate(): void
    {
        $this->fundingDate = [];
    }

    /**
     * Returns Funding Estimated Date.
     */
    public function getFundingEstimatedDate(): ?\DateTime
    {
        if (count($this->fundingEstimatedDate) == 0) {
            return null;
        }
        return $this->fundingEstimatedDate['value'];
    }

    /**
     * Sets Funding Estimated Date.
     *
     * @maps funding_estimated_date
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setFundingEstimatedDate(?\DateTime $fundingEstimatedDate): void
    {
        $this->fundingEstimatedDate['value'] = $fundingEstimatedDate;
    }

    /**
     * Unsets Funding Estimated Date.
     */
    public function unsetFundingEstimatedDate(): void
    {
        $this->fundingEstimatedDate = [];
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Source.
     */
    public function getSource(): ?GetWithdrawSourceResponse
    {
        return $this->source;
    }

    /**
     * Sets Source.
     *
     * @maps source
     */
    public function setSource(?GetWithdrawSourceResponse $source): void
    {
        $this->source = $source;
    }

    /**
     * Returns Target.
     */
    public function getTarget(): ?GetWithdrawTargetResponse
    {
        return $this->target;
    }

    /**
     * Sets Target.
     *
     * @maps target
     */
    public function setTarget(?GetWithdrawTargetResponse $target): void
    {
        $this->target = $target;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']                         = $this->id;
        $json['gateway_id']                 = $this->gatewayId;
        $json['amount']                     = $this->amount;
        $json['status']                     = $this->status;
        $json['created_at']                 = DateTimeHelper::toRfc3339DateTime($this->createdAt);
        $json['updated_at']                 = DateTimeHelper::toRfc3339DateTime($this->updatedAt);
        if (!empty($this->metadata)) {
            $json['metadata']               = $this->metadata['value'];
        }
        if (!empty($this->fee)) {
            $json['fee']                    = $this->fee['value'];
        }
        if (!empty($this->fundingDate)) {
            $json['funding_date']           = DateTimeHelper::toRfc3339DateTime($this->fundingDate['value']);
        }
        if (!empty($this->fundingEstimatedDate)) {
            $json['funding_estimated_date'] = DateTimeHelper::toRfc3339DateTime($this->fundingEstimatedDate['value']);
        }
        $json['type']                       = $this->type;
        $json['source']                     = $this->source;
        $json['target']                     = $this->target;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
