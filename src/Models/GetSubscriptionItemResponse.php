<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\Utils\DateTimeHelper;
use stdClass;

class GetSubscriptionItemResponse implements \JsonSerializable
{
    /**
     * @var array
     */
    private $id = [];

    /**
     * @var array
     */
    private $description = [];

    /**
     * @var array
     */
    private $status = [];

    /**
     * @var array
     */
    private $createdAt = [];

    /**
     * @var array
     */
    private $updatedAt = [];

    /**
     * @var array
     */
    private $pricingScheme = [];

    /**
     * @var array
     */
    private $discounts = [];

    /**
     * @var array
     */
    private $increments = [];

    /**
     * @var array
     */
    private $subscription = [];

    /**
     * @var array
     */
    private $name = [];

    /**
     * @var array
     */
    private $quantity = [];

    /**
     * @var array
     */
    private $cycles = [];

    /**
     * @var array
     */
    private $deletedAt = [];

    /**
     * Returns Id.
     */
    public function getId(): ?string
    {
        if (count($this->id) == 0) {
            return null;
        }
        return $this->id['value'];
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id['value'] = $id;
    }

    /**
     * Unsets Id.
     */
    public function unsetId(): void
    {
        $this->id = [];
    }

    /**
     * Returns Description.
     */
    public function getDescription(): ?string
    {
        if (count($this->description) == 0) {
            return null;
        }
        return $this->description['value'];
    }

    /**
     * Sets Description.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description['value'] = $description;
    }

    /**
     * Unsets Description.
     */
    public function unsetDescription(): void
    {
        $this->description = [];
    }

    /**
     * Returns Status.
     */
    public function getStatus(): ?string
    {
        if (count($this->status) == 0) {
            return null;
        }
        return $this->status['value'];
    }

    /**
     * Sets Status.
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status['value'] = $status;
    }

    /**
     * Unsets Status.
     */
    public function unsetStatus(): void
    {
        $this->status = [];
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?\DateTime
    {
        if (count($this->createdAt) == 0) {
            return null;
        }
        return $this->createdAt['value'];
    }

    /**
     * Sets Created At.
     *
     * @maps created_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(?\DateTime $createdAt): void
    {
        $this->createdAt['value'] = $createdAt;
    }

    /**
     * Unsets Created At.
     */
    public function unsetCreatedAt(): void
    {
        $this->createdAt = [];
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): ?\DateTime
    {
        if (count($this->updatedAt) == 0) {
            return null;
        }
        return $this->updatedAt['value'];
    }

    /**
     * Sets Updated At.
     *
     * @maps updated_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setUpdatedAt(?\DateTime $updatedAt): void
    {
        $this->updatedAt['value'] = $updatedAt;
    }

    /**
     * Unsets Updated At.
     */
    public function unsetUpdatedAt(): void
    {
        $this->updatedAt = [];
    }

    /**
     * Returns Pricing Scheme.
     */
    public function getPricingScheme(): ?GetPricingSchemeResponse
    {
        if (count($this->pricingScheme) == 0) {
            return null;
        }
        return $this->pricingScheme['value'];
    }

    /**
     * Sets Pricing Scheme.
     *
     * @maps pricing_scheme
     */
    public function setPricingScheme(?GetPricingSchemeResponse $pricingScheme): void
    {
        $this->pricingScheme['value'] = $pricingScheme;
    }

    /**
     * Unsets Pricing Scheme.
     */
    public function unsetPricingScheme(): void
    {
        $this->pricingScheme = [];
    }

    /**
     * Returns Discounts.
     *
     * @return GetDiscountResponse[]|null
     */
    public function getDiscounts(): ?array
    {
        if (count($this->discounts) == 0) {
            return null;
        }
        return $this->discounts['value'];
    }

    /**
     * Sets Discounts.
     *
     * @maps discounts
     *
     * @param GetDiscountResponse[]|null $discounts
     */
    public function setDiscounts(?array $discounts): void
    {
        $this->discounts['value'] = $discounts;
    }

    /**
     * Unsets Discounts.
     */
    public function unsetDiscounts(): void
    {
        $this->discounts = [];
    }

    /**
     * Returns Increments.
     *
     * @return GetIncrementResponse[]|null
     */
    public function getIncrements(): ?array
    {
        if (count($this->increments) == 0) {
            return null;
        }
        return $this->increments['value'];
    }

    /**
     * Sets Increments.
     *
     * @maps increments
     *
     * @param GetIncrementResponse[]|null $increments
     */
    public function setIncrements(?array $increments): void
    {
        $this->increments['value'] = $increments;
    }

    /**
     * Unsets Increments.
     */
    public function unsetIncrements(): void
    {
        $this->increments = [];
    }

    /**
     * Returns Subscription.
     */
    public function getSubscription(): ?GetSubscriptionResponse
    {
        if (count($this->subscription) == 0) {
            return null;
        }
        return $this->subscription['value'];
    }

    /**
     * Sets Subscription.
     *
     * @maps subscription
     */
    public function setSubscription(?GetSubscriptionResponse $subscription): void
    {
        $this->subscription['value'] = $subscription;
    }

    /**
     * Unsets Subscription.
     */
    public function unsetSubscription(): void
    {
        $this->subscription = [];
    }

    /**
     * Returns Name.
     * Item name
     */
    public function getName(): ?string
    {
        if (count($this->name) == 0) {
            return null;
        }
        return $this->name['value'];
    }

    /**
     * Sets Name.
     * Item name
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name['value'] = $name;
    }

    /**
     * Unsets Name.
     * Item name
     */
    public function unsetName(): void
    {
        $this->name = [];
    }

    /**
     * Returns Quantity.
     */
    public function getQuantity(): ?int
    {
        if (count($this->quantity) == 0) {
            return null;
        }
        return $this->quantity['value'];
    }

    /**
     * Sets Quantity.
     *
     * @maps quantity
     */
    public function setQuantity(?int $quantity): void
    {
        $this->quantity['value'] = $quantity;
    }

    /**
     * Unsets Quantity.
     */
    public function unsetQuantity(): void
    {
        $this->quantity = [];
    }

    /**
     * Returns Cycles.
     */
    public function getCycles(): ?int
    {
        if (count($this->cycles) == 0) {
            return null;
        }
        return $this->cycles['value'];
    }

    /**
     * Sets Cycles.
     *
     * @maps cycles
     */
    public function setCycles(?int $cycles): void
    {
        $this->cycles['value'] = $cycles;
    }

    /**
     * Unsets Cycles.
     */
    public function unsetCycles(): void
    {
        $this->cycles = [];
    }

    /**
     * Returns Deleted At.
     */
    public function getDeletedAt(): ?\DateTime
    {
        if (count($this->deletedAt) == 0) {
            return null;
        }
        return $this->deletedAt['value'];
    }

    /**
     * Sets Deleted At.
     *
     * @maps deleted_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDeletedAt(?\DateTime $deletedAt): void
    {
        $this->deletedAt['value'] = $deletedAt;
    }

    /**
     * Unsets Deleted At.
     */
    public function unsetDeletedAt(): void
    {
        $this->deletedAt = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->id)) {
            $json['id']             = $this->id['value'];
        }
        if (!empty($this->description)) {
            $json['description']    = $this->description['value'];
        }
        if (!empty($this->status)) {
            $json['status']         = $this->status['value'];
        }
        if (!empty($this->createdAt)) {
            $json['created_at']     = DateTimeHelper::toRfc3339DateTime($this->createdAt['value']);
        }
        if (!empty($this->updatedAt)) {
            $json['updated_at']     = DateTimeHelper::toRfc3339DateTime($this->updatedAt['value']);
        }
        if (!empty($this->pricingScheme)) {
            $json['pricing_scheme'] = $this->pricingScheme['value'];
        }
        if (!empty($this->discounts)) {
            $json['discounts']      = $this->discounts['value'];
        }
        if (!empty($this->increments)) {
            $json['increments']     = $this->increments['value'];
        }
        if (!empty($this->subscription)) {
            $json['subscription']   = $this->subscription['value'];
        }
        if (!empty($this->name)) {
            $json['name']           = $this->name['value'];
        }
        if (!empty($this->quantity)) {
            $json['quantity']       = $this->quantity['value'];
        }
        if (!empty($this->cycles)) {
            $json['cycles']         = $this->cycles['value'];
        }
        if (!empty($this->deletedAt)) {
            $json['deleted_at']     = DateTimeHelper::toRfc3339DateTime($this->deletedAt['value']);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
