<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\Utils\DateTimeHelper;
use stdClass;

/**
 * Recipient response
 */
class GetRecipientResponse implements \JsonSerializable
{
    /**
     * @var array
     */
    private $id = [];

    /**
     * @var array
     */
    private $name = [];

    /**
     * @var array
     */
    private $email = [];

    /**
     * @var array
     */
    private $document = [];

    /**
     * @var array
     */
    private $description = [];

    /**
     * @var array
     */
    private $type = [];

    /**
     * @var array
     */
    private $status = [];

    /**
     * @var array
     */
    private $createdAt = [];

    /**
     * @var array
     */
    private $updatedAt = [];

    /**
     * @var array
     */
    private $deletedAt = [];

    /**
     * @var array
     */
    private $defaultBankAccount = [];

    /**
     * @var array
     */
    private $gatewayRecipients = [];

    /**
     * @var array
     */
    private $metadata = [];

    /**
     * @var array
     */
    private $automaticAnticipationSettings = [];

    /**
     * @var array
     */
    private $transferSettings = [];

    /**
     * @var array
     */
    private $code = [];

    /**
     * @var array
     */
    private $paymentMode = ['value' => 'bank_transfer'];

    /**
     * Returns Id.
     * Id
     */
    public function getId(): ?string
    {
        if (count($this->id) == 0) {
            return null;
        }
        return $this->id['value'];
    }

    /**
     * Sets Id.
     * Id
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id['value'] = $id;
    }

    /**
     * Unsets Id.
     * Id
     */
    public function unsetId(): void
    {
        $this->id = [];
    }

    /**
     * Returns Name.
     * Name
     */
    public function getName(): ?string
    {
        if (count($this->name) == 0) {
            return null;
        }
        return $this->name['value'];
    }

    /**
     * Sets Name.
     * Name
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name['value'] = $name;
    }

    /**
     * Unsets Name.
     * Name
     */
    public function unsetName(): void
    {
        $this->name = [];
    }

    /**
     * Returns Email.
     * Email
     */
    public function getEmail(): ?string
    {
        if (count($this->email) == 0) {
            return null;
        }
        return $this->email['value'];
    }

    /**
     * Sets Email.
     * Email
     *
     * @maps email
     */
    public function setEmail(?string $email): void
    {
        $this->email['value'] = $email;
    }

    /**
     * Unsets Email.
     * Email
     */
    public function unsetEmail(): void
    {
        $this->email = [];
    }

    /**
     * Returns Document.
     * Document
     */
    public function getDocument(): ?string
    {
        if (count($this->document) == 0) {
            return null;
        }
        return $this->document['value'];
    }

    /**
     * Sets Document.
     * Document
     *
     * @maps document
     */
    public function setDocument(?string $document): void
    {
        $this->document['value'] = $document;
    }

    /**
     * Unsets Document.
     * Document
     */
    public function unsetDocument(): void
    {
        $this->document = [];
    }

    /**
     * Returns Description.
     * Description
     */
    public function getDescription(): ?string
    {
        if (count($this->description) == 0) {
            return null;
        }
        return $this->description['value'];
    }

    /**
     * Sets Description.
     * Description
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description['value'] = $description;
    }

    /**
     * Unsets Description.
     * Description
     */
    public function unsetDescription(): void
    {
        $this->description = [];
    }

    /**
     * Returns Type.
     * Type
     */
    public function getType(): ?string
    {
        if (count($this->type) == 0) {
            return null;
        }
        return $this->type['value'];
    }

    /**
     * Sets Type.
     * Type
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type['value'] = $type;
    }

    /**
     * Unsets Type.
     * Type
     */
    public function unsetType(): void
    {
        $this->type = [];
    }

    /**
     * Returns Status.
     * Status
     */
    public function getStatus(): ?string
    {
        if (count($this->status) == 0) {
            return null;
        }
        return $this->status['value'];
    }

    /**
     * Sets Status.
     * Status
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status['value'] = $status;
    }

    /**
     * Unsets Status.
     * Status
     */
    public function unsetStatus(): void
    {
        $this->status = [];
    }

    /**
     * Returns Created At.
     * Creation date
     */
    public function getCreatedAt(): ?\DateTime
    {
        if (count($this->createdAt) == 0) {
            return null;
        }
        return $this->createdAt['value'];
    }

    /**
     * Sets Created At.
     * Creation date
     *
     * @maps created_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(?\DateTime $createdAt): void
    {
        $this->createdAt['value'] = $createdAt;
    }

    /**
     * Unsets Created At.
     * Creation date
     */
    public function unsetCreatedAt(): void
    {
        $this->createdAt = [];
    }

    /**
     * Returns Updated At.
     * Last update date
     */
    public function getUpdatedAt(): ?\DateTime
    {
        if (count($this->updatedAt) == 0) {
            return null;
        }
        return $this->updatedAt['value'];
    }

    /**
     * Sets Updated At.
     * Last update date
     *
     * @maps updated_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setUpdatedAt(?\DateTime $updatedAt): void
    {
        $this->updatedAt['value'] = $updatedAt;
    }

    /**
     * Unsets Updated At.
     * Last update date
     */
    public function unsetUpdatedAt(): void
    {
        $this->updatedAt = [];
    }

    /**
     * Returns Deleted At.
     * Deletion date
     */
    public function getDeletedAt(): ?\DateTime
    {
        if (count($this->deletedAt) == 0) {
            return null;
        }
        return $this->deletedAt['value'];
    }

    /**
     * Sets Deleted At.
     * Deletion date
     *
     * @maps deleted_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDeletedAt(?\DateTime $deletedAt): void
    {
        $this->deletedAt['value'] = $deletedAt;
    }

    /**
     * Unsets Deleted At.
     * Deletion date
     */
    public function unsetDeletedAt(): void
    {
        $this->deletedAt = [];
    }

    /**
     * Returns Default Bank Account.
     * Default bank account
     */
    public function getDefaultBankAccount(): ?GetBankAccountResponse
    {
        if (count($this->defaultBankAccount) == 0) {
            return null;
        }
        return $this->defaultBankAccount['value'];
    }

    /**
     * Sets Default Bank Account.
     * Default bank account
     *
     * @maps default_bank_account
     */
    public function setDefaultBankAccount(?GetBankAccountResponse $defaultBankAccount): void
    {
        $this->defaultBankAccount['value'] = $defaultBankAccount;
    }

    /**
     * Unsets Default Bank Account.
     * Default bank account
     */
    public function unsetDefaultBankAccount(): void
    {
        $this->defaultBankAccount = [];
    }

    /**
     * Returns Gateway Recipients.
     * Info about the recipient on the gateway
     *
     * @return GetGatewayRecipientResponse[]|null
     */
    public function getGatewayRecipients(): ?array
    {
        if (count($this->gatewayRecipients) == 0) {
            return null;
        }
        return $this->gatewayRecipients['value'];
    }

    /**
     * Sets Gateway Recipients.
     * Info about the recipient on the gateway
     *
     * @maps gateway_recipients
     *
     * @param GetGatewayRecipientResponse[]|null $gatewayRecipients
     */
    public function setGatewayRecipients(?array $gatewayRecipients): void
    {
        $this->gatewayRecipients['value'] = $gatewayRecipients;
    }

    /**
     * Unsets Gateway Recipients.
     * Info about the recipient on the gateway
     */
    public function unsetGatewayRecipients(): void
    {
        $this->gatewayRecipients = [];
    }

    /**
     * Returns Metadata.
     * Metadata
     *
     * @return array<string,string>|null
     */
    public function getMetadata(): ?array
    {
        if (count($this->metadata) == 0) {
            return null;
        }
        return $this->metadata['value'];
    }

    /**
     * Sets Metadata.
     * Metadata
     *
     * @maps metadata
     *
     * @param array<string,string>|null $metadata
     */
    public function setMetadata(?array $metadata): void
    {
        $this->metadata['value'] = $metadata;
    }

    /**
     * Unsets Metadata.
     * Metadata
     */
    public function unsetMetadata(): void
    {
        $this->metadata = [];
    }

    /**
     * Returns Automatic Anticipation Settings.
     */
    public function getAutomaticAnticipationSettings(): ?GetAutomaticAnticipationResponse
    {
        if (count($this->automaticAnticipationSettings) == 0) {
            return null;
        }
        return $this->automaticAnticipationSettings['value'];
    }

    /**
     * Sets Automatic Anticipation Settings.
     *
     * @maps automatic_anticipation_settings
     */
    public function setAutomaticAnticipationSettings(
        ?GetAutomaticAnticipationResponse $automaticAnticipationSettings
    ): void {
        $this->automaticAnticipationSettings['value'] = $automaticAnticipationSettings;
    }

    /**
     * Unsets Automatic Anticipation Settings.
     */
    public function unsetAutomaticAnticipationSettings(): void
    {
        $this->automaticAnticipationSettings = [];
    }

    /**
     * Returns Transfer Settings.
     */
    public function getTransferSettings(): ?GetTransferSettingsResponse
    {
        if (count($this->transferSettings) == 0) {
            return null;
        }
        return $this->transferSettings['value'];
    }

    /**
     * Sets Transfer Settings.
     *
     * @maps transfer_settings
     */
    public function setTransferSettings(?GetTransferSettingsResponse $transferSettings): void
    {
        $this->transferSettings['value'] = $transferSettings;
    }

    /**
     * Unsets Transfer Settings.
     */
    public function unsetTransferSettings(): void
    {
        $this->transferSettings = [];
    }

    /**
     * Returns Code.
     * Recipient code
     */
    public function getCode(): ?string
    {
        if (count($this->code) == 0) {
            return null;
        }
        return $this->code['value'];
    }

    /**
     * Sets Code.
     * Recipient code
     *
     * @maps code
     */
    public function setCode(?string $code): void
    {
        $this->code['value'] = $code;
    }

    /**
     * Unsets Code.
     * Recipient code
     */
    public function unsetCode(): void
    {
        $this->code = [];
    }

    /**
     * Returns Payment Mode.
     * Payment mode
     */
    public function getPaymentMode(): ?string
    {
        if (count($this->paymentMode) == 0) {
            return null;
        }
        return $this->paymentMode['value'];
    }

    /**
     * Sets Payment Mode.
     * Payment mode
     *
     * @maps payment_mode
     */
    public function setPaymentMode(?string $paymentMode): void
    {
        $this->paymentMode['value'] = $paymentMode;
    }

    /**
     * Unsets Payment Mode.
     * Payment mode
     */
    public function unsetPaymentMode(): void
    {
        $this->paymentMode = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->id)) {
            $json['id']                              = $this->id['value'];
        }
        if (!empty($this->name)) {
            $json['name']                            = $this->name['value'];
        }
        if (!empty($this->email)) {
            $json['email']                           = $this->email['value'];
        }
        if (!empty($this->document)) {
            $json['document']                        = $this->document['value'];
        }
        if (!empty($this->description)) {
            $json['description']                     = $this->description['value'];
        }
        if (!empty($this->type)) {
            $json['type']                            = $this->type['value'];
        }
        if (!empty($this->status)) {
            $json['status']                          = $this->status['value'];
        }
        if (!empty($this->createdAt)) {
            $json['created_at']                      = DateTimeHelper::toRfc3339DateTime($this->createdAt['value']);
        }
        if (!empty($this->updatedAt)) {
            $json['updated_at']                      = DateTimeHelper::toRfc3339DateTime($this->updatedAt['value']);
        }
        if (!empty($this->deletedAt)) {
            $json['deleted_at']                      = DateTimeHelper::toRfc3339DateTime($this->deletedAt['value']);
        }
        if (!empty($this->defaultBankAccount)) {
            $json['default_bank_account']            = $this->defaultBankAccount['value'];
        }
        if (!empty($this->gatewayRecipients)) {
            $json['gateway_recipients']              = $this->gatewayRecipients['value'];
        }
        if (!empty($this->metadata)) {
            $json['metadata']                        = $this->metadata['value'];
        }
        if (!empty($this->automaticAnticipationSettings)) {
            $json['automatic_anticipation_settings'] = $this->automaticAnticipationSettings['value'];
        }
        if (!empty($this->transferSettings)) {
            $json['transfer_settings']               = $this->transferSettings['value'];
        }
        if (!empty($this->code)) {
            $json['code']                            = $this->code['value'];
        }
        if (!empty($this->paymentMode)) {
            $json['payment_mode']                    = $this->paymentMode['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
