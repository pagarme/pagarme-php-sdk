<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

/**
 * Card token data
 */
class GetCardTokenResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $lastFourDigits;

    /**
     * @var string|null
     */
    private $holderName;

    /**
     * @var string|null
     */
    private $holderDocument;

    /**
     * @var string|null
     */
    private $expMonth;

    /**
     * @var string|null
     */
    private $expYear;

    /**
     * @var string|null
     */
    private $brand;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var string|null
     */
    private $label;

    /**
     * Returns Last Four Digits.
     */
    public function getLastFourDigits(): ?string
    {
        return $this->lastFourDigits;
    }

    /**
     * Sets Last Four Digits.
     *
     * @maps last_four_digits
     */
    public function setLastFourDigits(?string $lastFourDigits): void
    {
        $this->lastFourDigits = $lastFourDigits;
    }

    /**
     * Returns Holder Name.
     */
    public function getHolderName(): ?string
    {
        return $this->holderName;
    }

    /**
     * Sets Holder Name.
     *
     * @maps holder_name
     */
    public function setHolderName(?string $holderName): void
    {
        $this->holderName = $holderName;
    }

    /**
     * Returns Holder Document.
     */
    public function getHolderDocument(): ?string
    {
        return $this->holderDocument;
    }

    /**
     * Sets Holder Document.
     *
     * @maps holder_document
     */
    public function setHolderDocument(?string $holderDocument): void
    {
        $this->holderDocument = $holderDocument;
    }

    /**
     * Returns Exp Month.
     */
    public function getExpMonth(): ?string
    {
        return $this->expMonth;
    }

    /**
     * Sets Exp Month.
     *
     * @maps exp_month
     */
    public function setExpMonth(?string $expMonth): void
    {
        $this->expMonth = $expMonth;
    }

    /**
     * Returns Exp Year.
     */
    public function getExpYear(): ?string
    {
        return $this->expYear;
    }

    /**
     * Sets Exp Year.
     *
     * @maps exp_year
     */
    public function setExpYear(?string $expYear): void
    {
        $this->expYear = $expYear;
    }

    /**
     * Returns Brand.
     */
    public function getBrand(): ?string
    {
        return $this->brand;
    }

    /**
     * Sets Brand.
     *
     * @maps brand
     */
    public function setBrand(?string $brand): void
    {
        $this->brand = $brand;
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Label.
     */
    public function getLabel(): ?string
    {
        return $this->label;
    }

    /**
     * Sets Label.
     *
     * @maps label
     */
    public function setLabel(?string $label): void
    {
        $this->label = $label;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['last_four_digits'] = $this->lastFourDigits;
        $json['holder_name']      = $this->holderName;
        $json['holder_document']  = $this->holderDocument;
        $json['exp_month']        = $this->expMonth;
        $json['exp_year']         = $this->expYear;
        $json['brand']            = $this->brand;
        $json['type']             = $this->type;
        $json['label']            = $this->label;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
